vmax <- c(4, 4)
psoptim(FUN=ackley.pso, n=n, max.loop=m.l, w=w, c1=c1, c2=c2,
xmin=xmin, xmax=xmax, vmax=vmax, seed=5)
source('C:/Users/Konasz/Desktop/projekt/algorytmy optymalizacyjne/PSO(roj czastek).R')
n <- 50
m.l <- 50
w <- 0.95
c1 <- 0.2
c2 <- 0.2
xmin <- c(-32, -32)
xmax <- c(32, 32)
vmax <- c(4, 4)
psoptim(FUN=ackley.pso, n=n, max.loop=m.l, w=w, c1=c1, c2=c2,
xmin=xmin, xmax=xmax, vmax=vmax, seed=5)
n <- 100
m.l <- 50
w <- 0.95
c1 <- 0.2
c2 <- 0.2
xmin <- c(-32, -32)
xmax <- c(32, 32)
vmax <- c(4, 4)
psoptim(FUN=ackley.pso, n=n, max.loop=m.l, w=w, c1=c1, c2=c2,
xmin=xmin, xmax=xmax, vmax=vmax, seed=5)
source('C:/Users/Konasz/Desktop/projekt/algorytmy optymalizacyjne/PSO(roj czastek).R')
n <- 100
m.l <- 50
w <- 0.95
c1 <- 0.2
c2 <- 0.2
xmin <- c(-32, -32)
xmax <- c(32, 32)
vmax <- c(4, 4)
psoptim(FUN=ackley.pso, n=n, max.loop=m.l, w=w, c1=c1, c2=c2,
xmin=xmin, xmax=xmax, vmax=vmax, seed=5)
source('C:/Users/Konasz/Desktop/projekt/algorytmy optymalizacyjne/PSO(roj czastek).R')
n <- 100
m.l <- 50
w <- 0.95
c1 <- 0.2
c2 <- 0.2
xmin <- c(-32, -32)
xmax <- c(32, 32)
vmax <- c(4, 4)
psoptim(FUN=ackley.pso, n=n, max.loop=m.l, w=w, c1=c1, c2=c2,
xmin=xmin, xmax=xmax, vmax=vmax, seed=5)
source('C:/Users/Konasz/Desktop/projekt/algorytmy optymalizacyjne/PSO(roj czastek).R')
source('C:/Users/Konasz/Desktop/projekt/algorytmy optymalizacyjne/PSO(roj czastek).R')
source('C:/Users/Konasz/Desktop/projekt/algorytmy optymalizacyjne/PSO(roj czastek).R')
n <- 100
m.l <- 50
w <- 0.95
c1 <- 0.2
c2 <- 0.2
xmin <- c(-32, -32)
xmax <- c(32, 32)
vmax <- c(4, 4)
psoptim(FUN=ackley.pso, n=n, max.loop=m.l, w=w, c1=c1, c2=c2,
xmin=xmin, xmax=xmax, vmax=vmax, seed=5)
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
n <- 100
m.l <- 100
w <- 0.95
c1 <- 0.2
c2 <- 0.2
xmin <- c(-32, -32)
xmax <- c(32, 32)
vmax <- c(4, 4)
psoptim(FUN=ackley.pso, n=n, max.loop=m.l, w=w, c1=c1, c2=c2,
xmin=xmin, xmax=xmax, vmax=vmax, seed=5)
library(data.table)
il.robali <- 50
max.iteracji <- 100
w <- 0.95
c1 <- 0.2
c2 <- 0.2
xmin <- c(-32, -32)
xmax <- c(32, 32)
vmax <- c(4, 4)
powt = 2
x1=c()
x2=c()
minimum=c()
czas=c()
iter=c()
for(i in 1:powt)
{
psoptim(FUN=ackley.pso, n=il.robali, max.loop=max.iteracji, w=w, c1=c1, c2=c2,
xmin=xmin, xmax=xmax, vmax=vmax, seed=5)
x1[i] = res$sol[1]
x2[i] = res$sol[2]
minimum[i] = res$val* -1
czas[i] = wynikczasu[3]
iter[i] = res$loop
}
tabela = data.table(ID=c(1:powt),Wartosc_x1=x1,Wartosc_x2=x2, Znalezione_minimum=minimum, Iteracje_do_wyniku=iter, Czas_wykonania=czas)
print(tabela)
library(data.table)
il.robali <- 50
max.iteracji <- 100
w <- 0.95
c1 <- 0.2
c2 <- 0.2
xmin <- c(-32, -32)
xmax <- c(32, 32)
vmax <- c(4, 4)
powt = 2
x1=c()
x2=c()
minimum=c()
czas=c()
iter=c()
for(i in 1:powt)
{
psoptim(FUN=ackley.pso, n=il.robali, max.loop=max.iteracji, w=w, c1=c1, c2=c2,
xmin=xmin, xmax=xmax, vmax=vmax, seed=5, anim = FALSE)
x1[i] = res$sol[1]
x2[i] = res$sol[2]
minimum[i] = res$val* -1
czas[i] = wynikczasu[3]
iter[i] = res$loop
}
tabela = data.table(ID=c(1:powt),Wartosc_x1=x1,Wartosc_x2=x2, Znalezione_minimum=minimum, Iteracje_do_wyniku=iter, Czas_wykonania=czas)
print(tabela)
library(data.table)
il.robali <- 50
max.iteracji <- 100
w <- 0.95
c1 <- 0.2
c2 <- 0.2
xmin <- c(-32, -32)
xmax <- c(32, 32)
vmax <- c(4, 4)
powt = 20
x1=c()
x2=c()
minimum=c()
czas=c()
iter=c()
for(i in 1:powt)
{
psoptim(FUN=ackley.pso, n=il.robali, max.loop=max.iteracji, w=w, c1=c1, c2=c2,
xmin=xmin, xmax=xmax, vmax=vmax, seed=5, anim = FALSE)
x1[i] = res$sol[1]
x2[i] = res$sol[2]
minimum[i] = res$val* -1
czas[i] = wynikczasu[3]
iter[i] = res$loop
}
tabela = data.table(ID=c(1:powt),Wartosc_x1=x1,Wartosc_x2=x2, Znalezione_minimum=minimum, Iteracje_do_wyniku=iter, Czas_wykonania=czas)
print(tabela)
source('C:/Users/Konasz/Desktop/projekt/algorytmy optymalizacyjne/PSO(roj czastek).R')
library("psoptim", lib.loc="~/R/win-library/3.4")
source('C:/Users/Konasz/Desktop/projekt/testy/opt pso orginalna.R')
n <- 50
m.l <- 50
w <- 0.95
c1 <- 0.2
c2 <- 0.2
xmin <- c(-32, -32)
xmax <- c(32, 32)
vmax <- c(4, 4)
psoptim(FUN=ackley.pso, n=n, max.loop=m.l, w=w, c1=c1, c2=c2,
xmin=xmin, xmax=xmax, vmax=vmax, seed=5)
n <- 50
m.l <- 50
w <- 0.95
c1 <- 0.2
c2 <- 0.2
xmin <- c(-32, -32)
xmax <- c(32, 32)
vmax <- c(4, 4)
psoptim(FUN=ackley.pso, n=n, max.loop=m.l, w=w, c1=c1, c2=c2,
xmin=xmin, xmax=xmax, vmax=vmax, seed=5)
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
funkcje[1]
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
funkcje
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
funkcje[2]
funkcje[1]
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
funkcje
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
funkcje
ackley.pso
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
funkcje[10]
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
tabela[1]
tabela
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
tabela[[2]]
tabela[[1]]
tabela[[[1]]]
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
tabela[[[1]]]
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
tabela
tabela[1]
tabela[1][1]
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
warnings()
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
tabela2
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
mean(tabela1)
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
ackley=function(funkcja){
psoptim(FUN<-funkcja, n=il.robali[j], max.loop=max.iteracji, w=w, c1=c1, c2=c2,
xmin=xmin, xmax=xmax, vmax=vmax, seed=5)}
library(data.table)
funkcje=list("ackley.pso",
"beale.pso",
"goldstein.pso",
"cross_in_tray.pso",
"holder.table.pso",
"bohachevsky.pso",
"venter.pso",
"matyas.pso",
"drop_wave.pso",
"easom.pso")
il.robali <- c(20,40,80,100)
max.iteracji <- 50
w <- 0.95
c1 <- 0.2
c2 <- 0.2
xmin <- c(-32, -32)
xmax <- c(32, 32)
vmax <- c(4, 4)
powt = 3
x1=c()
x2=c()
minimum=c()
czas=c()
iter=c()
x1.sr=c()
x2.sr=c()
minimum.sr=c()
czas.sr=c()
iter.sr=c()
for(j in 1:4) #rozne liczebnosci rojow
{
x1=0
x2=0
minimum=0
czas=0
iter=0
for(i in 1:powt) #ilosc powtorzen tej samej funkcji tym samym algorytmem i ta sama liczebnoscia
{
ackley(ackley.pso)
x1[i] = res$sol[1]
x2[i] = res$sol[2]
minimum[i] = res$val* -1
czas[i] = wynikczasu[3]
iter[i] = res$loop
}
x1[powt+1] = mean(x1)
x2[powt+1] = mean(x2)
minimum[powt+1] = mean(minimum)
czas[powt+1] = mean(czas)
iter[powt+1] = mean(iter)
x1.sr[j]=x1[powt+1]
x2.sr[j]=x2[powt+1]
minimum.sr[j]=minimum[powt+1]
czas.sr[j]=czas[powt+1]
iter.sr[j]=iter[powt+1]
if(il.robali[j] == 20)
{
tabela1 <- data.table(Lp=c(1:powt,"Srednie"),Liczebnosc_roju=il.robali[j],Wartosc_x1=x1,Wartosc_x2=x2, Znalezione_minimum=minimum, Iteracje_do_wyniku=iter, Czas_wykonania=czas)
print(tabela1)
}
if(il.robali[j] == 40)
{
tabela2 <- data.table(Lp=c(1:powt,"Srednie"),Liczebnosc_roju=il.robali[j],Wartosc_x1=x1,Wartosc_x2=x2, Znalezione_minimum=minimum, Iteracje_do_wyniku=iter, Czas_wykonania=czas)
print(tabela2)
}
if(il.robali[j] == 80)
{
tabela3 <- data.table(Lp=c(1:powt,"Srednie"),Liczebnosc_roju=il.robali[j],Wartosc_x1=x1,Wartosc_x2=x2, Znalezione_minimum=minimum, Iteracje_do_wyniku=iter, Czas_wykonania=czas)
print(tabela3)
}
if(il.robali[j] == 100)
{
tabela4 <- data.table(Lp=c(1:powt,"Srednie"),Liczebnosc_roju=il.robali[j],Wartosc_x1=x1,Wartosc_x2=x2, Znalezione_minimum=minimum, Iteracje_do_wyniku=iter, Czas_wykonania=czas)
print(tabela4)
}
cat("\n\n\n")
}
cat("TABELA SREDNICH Z 1 FUNKCJI", "\n\n")
tabela.srednich <- data.table(Nr_sredniej=c(1:4),Liczebnosc_roju=il.robali,Wartosc_x1=x1.sr,Wartosc_x2=x2.sr, Znalezione_minimum=minimum.sr, Iteracje_do_wyniku=iter.sr, Czas_wykonania=czas.sr)
print(tabela.srednich)
ackley=function(funkcja){
psoptim(FUN<-funkcja, n=il.robali[j], max.loop=max.iteracji, w=w, c1=c1, c2=c2,
xmin=xmin, xmax=xmax, vmax=vmax, seed=6)}
library(data.table)
funkcje=list("ackley.pso",
"beale.pso",
"goldstein.pso",
"cross_in_tray.pso",
"holder.table.pso",
"bohachevsky.pso",
"venter.pso",
"matyas.pso",
"drop_wave.pso",
"easom.pso")
il.robali <- c(20,40,80,100)
max.iteracji <- 50
w <- 0.95
c1 <- 0.2
c2 <- 0.2
xmin <- c(-32, -32)
xmax <- c(32, 32)
vmax <- c(4, 4)
powt = 3
x1=c()
x2=c()
minimum=c()
czas=c()
iter=c()
x1.sr=c()
x2.sr=c()
minimum.sr=c()
czas.sr=c()
iter.sr=c()
for(j in 1:4) #rozne liczebnosci rojow
{
x1=0
x2=0
minimum=0
czas=0
iter=0
for(i in 1:powt) #ilosc powtorzen tej samej funkcji tym samym algorytmem i ta sama liczebnoscia
{
ackley(ackley.pso)
x1[i] = res$sol[1]
x2[i] = res$sol[2]
minimum[i] = res$val* -1
czas[i] = wynikczasu[3]
iter[i] = res$loop
}
x1[powt+1] = mean(x1)
x2[powt+1] = mean(x2)
minimum[powt+1] = mean(minimum)
czas[powt+1] = mean(czas)
iter[powt+1] = mean(iter)
x1.sr[j]=x1[powt+1]
x2.sr[j]=x2[powt+1]
minimum.sr[j]=minimum[powt+1]
czas.sr[j]=czas[powt+1]
iter.sr[j]=iter[powt+1]
if(il.robali[j] == 20)
{
tabela1 <- data.table(Lp=c(1:powt,"Srednie"),Liczebnosc_roju=il.robali[j],Wartosc_x1=x1,Wartosc_x2=x2, Znalezione_minimum=minimum, Iteracje_do_wyniku=iter, Czas_wykonania=czas)
print(tabela1)
}
if(il.robali[j] == 40)
{
tabela2 <- data.table(Lp=c(1:powt,"Srednie"),Liczebnosc_roju=il.robali[j],Wartosc_x1=x1,Wartosc_x2=x2, Znalezione_minimum=minimum, Iteracje_do_wyniku=iter, Czas_wykonania=czas)
print(tabela2)
}
if(il.robali[j] == 80)
{
tabela3 <- data.table(Lp=c(1:powt,"Srednie"),Liczebnosc_roju=il.robali[j],Wartosc_x1=x1,Wartosc_x2=x2, Znalezione_minimum=minimum, Iteracje_do_wyniku=iter, Czas_wykonania=czas)
print(tabela3)
}
if(il.robali[j] == 100)
{
tabela4 <- data.table(Lp=c(1:powt,"Srednie"),Liczebnosc_roju=il.robali[j],Wartosc_x1=x1,Wartosc_x2=x2, Znalezione_minimum=minimum, Iteracje_do_wyniku=iter, Czas_wykonania=czas)
print(tabela4)
}
cat("\n\n\n")
}
cat("TABELA SREDNICH Z 1 FUNKCJI", "\n\n")
tabela.srednich <- data.table(Nr_sredniej=c(1:4),Liczebnosc_roju=il.robali,Wartosc_x1=x1.sr,Wartosc_x2=x2.sr, Znalezione_minimum=minimum.sr, Iteracje_do_wyniku=iter.sr, Czas_wykonania=czas.sr)
print(tabela.srednich)
rand(1:100)
rand(1,100)
rand
rand()
.Random.seed
.Random.seed[1]
.Random.seed[1]
.Random.seed[1]
.Random.seed[1]
.Random.seed[1]
runif(3)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
rand(1)
as.integer(runif(1))
as.integer(runif(1))
as.integer(runif(1))
as.integer(runif(1))
as.integer(runif(1))
as.integer(runif(1))
runif(1000, 1, 1000)
runif(1000, 1)
runif( 1,1000)
runif( 1,1000)
runif( 1,1000)
runif( 1,1000)
runif( 1,1000)
runif( 1,1000)
runif( 1,1000)
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
runif( 1)
runif( 1)
runif( 1)
runif( 1)
runif( 1)
runif( 6)
runif( 1,min=0,max=1000)
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
install.packages("xlsx")
library(xlsx)
write.xlsx(tabela.srednich,"C:/")
write.xlsx(tabela.srednich,"C:/wyniki")
write.xlsx(tabela.srednich,"C:/wyniki.xlsx")
write.xlsx(tabela.srednich,"D:/wyniki.xlsx")
write.xlsx(tabela.srednich,"D:/wyniki.xlsx")
write.xlsx(tabela.srednich,"D:/wyniki.xlsx")
write.xlsx(tabela1,tabela2,tabela3,tabela4,tabela.srednich,"C:\Users\Konasz\Desktop\projekt\wyniki_eks.xlsx")
write.xlsx(tabela1,tabela2,tabela3,tabela4,tabela.srednich,"C:\users\Konasz\Desktop\projekt\wyniki_eks.xlsx")
write.xlsx(tabela1,tabela2,tabela3,tabela4,tabela.srednich,"C:/users/Konasz/Desktop/projekt/wyniki_eks.xlsx")
write.xlsx((tabela1,tabela2,tabela3,tabela4,tabela.srednich),"C:/users/Konasz/Desktop/projekt/wyniki_eks.xlsx")
d= data.table(1,2)
d
d= data.table(1= marcin,2)
d= data.table(a= c(1,2),b=C(3,4))
d= data.table(a= c(1,2),b=c(3,4))
d
m= data.table(a= c(44,66),b=c(88,55))
a=list()
list[[1]] = d
m= data.frame(a= c(44,66),b=c(88,55))
m
d= frame(a= c(1,2),b=c(3,4))
d= data.frame(a= c(1,2),b=c(3,4))
d
list[[1]] = d
list[[1]] = data.frame(a= c(1,2),b=c(3,4))
list[[1]] = a
list[[1]] = 2
list[1] = 2
a=list()
a[[1]]=d
a
a[1] = data.table(a= c(1,2),b=c(3,4))
a[2] = data.table(a= c(1,2),b=c(3,4))
a[2] = data.table(a= c(1,2),b=c(3,4))
a[2]
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
a[2] = data.frame(a= c(1,2),b=c(3,4))
a[[1]]=d
a[[1]] = d
a[[1]]
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
a[[2]] = data.table(c(5,4),c(4,3),c(32,3))
a
write.xlsx(a,"C:/users/Konasz/Desktop/projekt/wyniki_eks.xlsx")
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
write.xlsx(tabele,"C:/users/Konasz/Desktop/projekt/wyniki_eks.xlsx")
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
tabele[[5]]
source('C:/Users/Konasz/Desktop/projekt/testy/test PSO.R')
